[{"C:\\Users\\sbikh\\Documents\\GitHub\\quo\\src\\index.js":"1","C:\\Users\\sbikh\\Documents\\GitHub\\quo\\src\\App.js":"2","C:\\Users\\sbikh\\Documents\\GitHub\\quo\\src\\Components\\Lesson\\index.js":"3","C:\\Users\\sbikh\\Documents\\GitHub\\quo\\src\\Components\\Lesson\\Results\\Verified.js":"4","C:\\Users\\sbikh\\Documents\\GitHub\\quo\\src\\Components\\Header\\index.js":"5","C:\\Users\\sbikh\\Documents\\GitHub\\quo\\src\\Components\\Dashboard\\index.js":"6","C:\\Users\\sbikh\\Documents\\GitHub\\quo\\src\\data.js":"7","C:\\Users\\sbikh\\Documents\\GitHub\\quo\\src\\Components\\Lesson\\Results\\Correct.js":"8","C:\\Users\\sbikh\\Documents\\GitHub\\quo\\src\\Components\\Lesson\\Results\\Wrong.js":"9"},{"size":242,"mtime":1684464871934,"results":"10","hashOfConfig":"11"},{"size":674,"mtime":1684464871928,"results":"12","hashOfConfig":"11"},{"size":3772,"mtime":1684464871933,"results":"13","hashOfConfig":"11"},{"size":193,"mtime":1684464871932,"results":"14","hashOfConfig":"11"},{"size":1653,"mtime":1684464871931,"results":"15","hashOfConfig":"11"},{"size":1534,"mtime":1684464871929,"results":"16","hashOfConfig":"11"},{"size":1588,"mtime":1684464871934,"results":"17","hashOfConfig":"11"},{"size":611,"mtime":1684464871932,"results":"18","hashOfConfig":"11"},{"size":605,"mtime":1684464871933,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1677ivj",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\sbikh\\Documents\\GitHub\\quo\\src\\index.js",[],[],"C:\\Users\\sbikh\\Documents\\GitHub\\quo\\src\\App.js",[],[],"C:\\Users\\sbikh\\Documents\\GitHub\\quo\\src\\Components\\Lesson\\index.js",["49","50"],[],"import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport \"./style.css\";\r\nimport data from \"../../data\";\r\n\r\nimport Correct from \"./Results/Correct\";\r\nimport Wrong from \"./Results/Wrong\";\r\n\r\nfunction Lesson() {\r\n    const navigate = useNavigate();\r\n    const [progressValue, setProgressValue] = useState(0);\r\n    const [questionIndex, setQuestionIndex] = useState(0);\r\n    const [questions, setQuestions] = useState(data.getQuestions());\r\n    const [question, setQuestion] = useState(questions[questionIndex]);\r\n    const [selectedAnswer, setSelectedAnswer] = useState(\"\");\r\n\r\n    /*\r\n        0 = none\r\n        1 = correct\r\n        2 = wrong\r\n    */\r\n    const [answerState, setAnswerState] = useState(0);\r\n    const {\r\n        value,\r\n        answer,\r\n        choices,\r\n    } = question;\r\n    const onContinue = () => {\r\n        setAnswerState(selectedAnswer === answer ? 1 : 2);\r\n    };\r\n\r\n    const onNextQuestion = () => {\r\n        if ((questionIndex + 1) >= questions.length) {\r\n            navigate(\"/lesson/results/verified\");\r\n            return;\r\n        }\r\n        console.log(progressValue,(questions.length / 100), progressValue + (questions.length / 100));\r\n        setAnswerState(0);\r\n        setProgressValue(progressValue + (100 / questions.length));\r\n        setQuestion(questions[questionIndex + 1]);\r\n        setQuestionIndex(questionIndex + 1);\r\n    };\r\n\r\n    const onAnswerSelected = (choice) => {\r\n        setSelectedAnswer(choice);\r\n    };\r\n\r\n    return (\r\n        <div className=\"lesson\">\r\n            <div className=\"progress-bar\">\r\n                <div className=\"progress-bar-start\">\r\n                    <img src=\"/assets/img/cross.png\" alt=\"close\" />\r\n                </div>\r\n                <progress className=\"progress-bar-progresss\" value={`${progressValue}`} max=\"100\"> 32% </progress>\r\n                <div className=\"progress-bar-end\">\r\n                    <img src=\"/assets/img/dollar.png\" alt=\"dollar\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"choice-app\">\r\n                <div className=\"choice-body\">\r\n                    <div className=\"prompt-question\">\r\n                        Translate this sentence\r\n                    </div>\r\n                    <div className=\"prompt-value\">\r\n                        {value}\r\n                    </div>\r\n\r\n                    <div className=\"multiple-choice\">\r\n                        <div\r\n                            className={`answer ${selectedAnswer === choices[0] ? \"answer-selected\" : \"\"}`}\r\n                            onClick={() => onAnswerSelected(choices[0])}>\r\n                            <span>{choices[0]}</span>\r\n                        </div>\r\n                        <div\r\n                            className={`answer ${selectedAnswer === choices[1] ? \"answer-selected\" : \"\"}`}\r\n                            onClick={() => onAnswerSelected(choices[1])}>\r\n                            <span>{choices[1]}</span>\r\n                        </div>\r\n                        <div\r\n                            className={`answer ${selectedAnswer === choices[2] ? \"answer-selected\" : \"\"}`}\r\n                            onClick={() => onAnswerSelected(choices[2])}>\r\n                            <span>{choices[2]}</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"continue\">\r\n                        <button onClick={onContinue}>CONTINUE</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            { answerState === 2 && <Wrong onNextQuestion={onNextQuestion} /> }\r\n            { answerState === 1 && <Correct onNextQuestion={onNextQuestion} /> }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Lesson;","C:\\Users\\sbikh\\Documents\\GitHub\\quo\\src\\Components\\Lesson\\Results\\Verified.js",[],[],"C:\\Users\\sbikh\\Documents\\GitHub\\quo\\src\\Components\\Header\\index.js",[],[],"C:\\Users\\sbikh\\Documents\\GitHub\\quo\\src\\Components\\Dashboard\\index.js",["51"],[],"import { useState } from \"react\";\r\nimport { Outlet, Link } from \"react-router-dom\";\r\n\r\nimport data from \"../../data\";\r\nimport \"./style.css\";\r\n\r\nconst getCategories = data.getCategories;\r\nconsole.log(data.getCategories());\r\n\r\nfunction displayTopic(d) {\r\n    return (\r\n        <div className=\"column\">\r\n            <Link to={`${d.link}`}>\r\n                <div className=\"topic\">\r\n                    <div className=\"topic-img\">\r\n                        <img src={`/assets/img/${d.img}`} alt={d.name} />\r\n                    </div>\r\n                    <div className=\"topic-text\">\r\n                        <span>{d.name}</span>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction displayCategory(c) {\r\n    \r\n    return (\r\n        <div  key={`${c.name}`}>\r\n            {/* top level */}\r\n            <div className=\"row\">\r\n                { displayTopic(c)}\r\n            </div>\r\n\r\n            {/* sub levels */}\r\n            { c.topics.map(topic => {\r\n                return (\r\n                    <div className=\"row\">\r\n                        {topic.map(t => displayTopic(t))}\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Dashboard() {\r\n    const [categories] = useState(getCategories());\r\n\r\n    return (\r\n        <div className=\"topics\">\r\n            <div className=\"topics-list\">\r\n                { categories.map(c => displayCategory(c)) }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;","C:\\Users\\sbikh\\Documents\\GitHub\\quo\\src\\data.js",[],[],"C:\\Users\\sbikh\\Documents\\GitHub\\quo\\src\\Components\\Lesson\\Results\\Correct.js",[],[],"C:\\Users\\sbikh\\Documents\\GitHub\\quo\\src\\Components\\Lesson\\Results\\Wrong.js",[],[],{"ruleId":"52","severity":1,"message":"53","line":1,"column":10,"nodeType":"54","messageId":"55","endLine":1,"endColumn":19},{"ruleId":"52","severity":1,"message":"56","line":14,"column":23,"nodeType":"54","messageId":"55","endLine":14,"endColumn":35},{"ruleId":"52","severity":1,"message":"57","line":2,"column":10,"nodeType":"54","messageId":"55","endLine":2,"endColumn":16},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setQuestions' is assigned a value but never used.","'Outlet' is defined but never used."]